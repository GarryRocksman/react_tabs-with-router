{"version":3,"sources":["pages/NotFoundPage.tsx","components/Tabs/Tabs.tsx","pages/TabsPage.tsx","pages/HomePage.tsx","components/PageNavLink/NavLink.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["NotFoundPage","className","Tabs","tabs","tabId","useParams","map","tab","cn","id","to","title","content","TabsPage","isTabIdSelected","find","HomePage","PageNavLink","text","isActive","Navigation","App","path","element","index","replace","ReactDOM","render","document","getElementById"],"mappings":"gOAAaA,EAAe,kBAC1B,oBAAIC,UAAU,QAAd,6B,uBCOWC,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9BC,EAAUC,cAAVD,MAER,OACE,qBAAKH,UAAU,gBAAf,SACE,6BACGE,EAAKG,KAAI,SAAAC,GAAG,OACX,oBAEE,UAAQ,MACRN,UAAWO,IAAG,CACZ,YAAaD,EAAIE,KAAOL,IAJ5B,SAOE,cAAC,IAAD,CAAMM,GAAE,gBAAWH,EAAIE,IAAvB,SACGF,EAAII,SAPFJ,EAAIE,YCbfN,EAAO,CACX,CAAEM,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WACtB,IAAQT,EAAUC,cAAVD,MAEFU,EAAkBX,EAAKY,MAAK,SAAAR,GAAG,OAAIA,EAAIE,KAAOL,KAC9CQ,EAAUE,EACZA,EAAgBF,QAChB,sBAEJ,OACE,qCACE,oBAAIX,UAAU,QAAd,uBACA,cAAC,EAAD,CAAME,KAAMA,IACZ,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACGW,QCtBII,EAAW,kBACtB,oBAAIf,UAAU,QAAd,wBCOWgB,EAA+B,SAAC,GAAD,IAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACER,GAAIA,EACJT,UAAW,gBAAGkB,EAAH,EAAGA,SAAH,OAAkBX,IAAG,cAAe,CAC7C,YAAaW,KAHjB,SAMGD,KCbQE,EAAa,kBACxB,qBACEnB,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaS,GAAG,IAAIQ,KAAK,SACzB,cAAC,EAAD,CAAaR,GAAG,OAAOQ,KAAK,iBCDvBG,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKpB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUb,GAAG,IAAIe,SAAO,MAEpD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,iBCtBnCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f831af4.chunk.js","sourcesContent":["export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n};\nexport const Tabs: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  return (\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            data-cy=\"Tab\"\n            className={cn({\n              'is-active': tab.id === tabId,\n            })}\n          >\n            <Link to={`/tabs/${tab.id}`}>\n              {tab.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tabs } from '../components/Tabs/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  const isTabIdSelected = tabs.find(tab => tab.id === tabId);\n  const content = isTabIdSelected\n    ? isTabIdSelected.content\n    : 'Please select a tab';\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs tabs={tabs} />\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn('navbar-item', {\n      'is-active': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/NavLink';\n\nexport const Navigation = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { TabsPage } from './pages/TabsPage';\nimport { HomePage } from './pages/HomePage';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <>\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage />} />\n\n            <Route path=\":tabId\" element={<TabsPage />} />\n          </Route>\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}